name: Build and Release Electron App

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Build the backend (if necessary, e.g., Java with Maven or Gradle)
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install backend dependencies (Java)
        run: |
          cd backend
          ./mvnw clean compile  # Use your actual Java build command (e.g., Maven or Gradle)
        
      # Build the frontend (if applicable, e.g., React or Angular)
      - name: Set up Node.js for frontend
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Adjust to your Node.js version

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      # Build the Electron app
      - name: Install Electron dependencies
        run: |
          cd electron
          npm install

      - name: Build Electron app
        run: |
          cd electron
          npm run build  # Ensure this command builds your Electron app (e.g., using electron-builder)

      # Upload the packaged Electron `.exe` as an artifact
      - name: Upload Release Artifact
        uses: actions/upload-artifact@v3
        with:
          name: electron-app
          path: electron/dist/*.exe  # Adjust the path where your .exe is built

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: electron/dist/*.exe  # Adjust the path to where the .exe file is located
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
