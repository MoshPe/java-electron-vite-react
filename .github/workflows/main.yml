name: Build and Release Electron App

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Build the backend
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Set up maven
        uses: s4u/maven-settings-action@v3.1.0 

      - name: Install backend dependencies (Java)
        run: |
          cd backend
          mvn clean compile
        
      # Build the frontend
      - name: Set up Node.js for frontend
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      # Build the Electron app
      - name: Install Electron dependencies
        run: |
          cd electron
          npm install

      - name: Build Electron app
        run: |
          cd electron
          npm run build  # Ensure this command builds your Electron app (e.g., using electron-builder)

      - name: Bump version
        run: |
          cd electron
          # Bump version
          npm version minor -m "Bump version to %s"

      - name: Commit new version
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add electron/package.json electron/package-lock.json
          git commit -m "Bump version to ${{ steps.get_version.outputs.version }}"
          git push origin dev
          
      # Upload the packaged Electron `.exe` as an artifact
      - name: Upload Release Artifact
        uses: actions/upload-artifact@v3
        with:
          name: electron-app
          path: electron/dist/*.exe  # Adjust the path where your .exe is built

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
        with:
          path: electron
          
      - name: Create Git tag
        run: |
          echo "Tagging with version: v${{ steps.package-version.outputs.current-version}}"
          git tag "v${{ steps.package-version.outputs.current-version}}"
          git push origin "v${{ steps.package-version.outputs.current-version}}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Create GitHub Release
        if: steps.build.outcome == 'success'
        uses: softprops/action-gh-release@v2
        with:
          files: electron/dist/*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
